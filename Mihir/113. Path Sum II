/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    void dfs(TreeNode* root, vector<int> curr, int targetSum, int currSum) {
        if(!root) {
            return;
        }
        
        if(!root->left && !root->right) {
            if(targetSum == currSum + root->val) {
                curr.push_back(root->val);
                res.push_back(curr);
            }
            return;
        }
        curr.push_back(root->val);
        dfs(root->left, curr, targetSum, currSum + root->val);
        dfs(root->right, curr, targetSum, currSum + root->val);
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> curr;
        dfs(root, curr, targetSum, 0);
        return res;
    }
};
